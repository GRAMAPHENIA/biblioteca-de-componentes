---
// Header Component - Main navigation
import Button from '../atoms/Button.astro';
import Icon from '../atoms/Icon.astro';
import { companyInfo } from '../../data/company';
---

<!-- Header -->
<header class="sticky top-0 z-50 w-full border-b bg-white/95 backdrop-blur supports-[backdrop-filter]:bg-white/60">
  <div class="container mx-auto px-4">
    <div class="flex h-16 items-center justify-between">
      <!-- Logo -->
      <div class="flex items-center space-x-4">
        <a href="/" class="flex items-center space-x-2">
          <img src="/crown.svg" alt="Logo" class="h-8 w-8" />
          <span class="text-xl font-bold text-gray-900">{companyInfo.name}</span>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <nav class="hidden md:flex items-center space-x-8">
        <a href="/" class="text-gray-600 hover:text-gray-900 transition-colors">Inicio</a>
        <a href="/servicios" class="text-gray-600 hover:text-gray-900 transition-colors">Servicios</a>
        <a href="/acerca-de" class="text-gray-600 hover:text-gray-900 transition-colors">Acerca de</a>
        <a href="/precios" class="text-gray-600 hover:text-gray-900 transition-colors">Precios</a>
        <a href="/testimonios" class="text-gray-600 hover:text-gray-900 transition-colors">Testimonios</a>
        <a href="/contacto" class="text-gray-600 hover:text-gray-900 transition-colors">Contacto</a>
      </nav>

      <!-- Desktop Actions -->
      <div class="hidden md:flex items-center space-x-4">
        <Button variant="ghost" size="sm" href="/contacto">
          <Icon name="phone" size={16} />
          <span>Contacto</span>
        </Button>
        <Button variant="primary" size="sm" href="/servicios">
          <Icon name="arrow-right" size={16} />
          <span>Ver Servicios</span>
        </Button>
      </div>

      <!-- Mobile Menu Button -->
      <button
        id="mobile-menu-toggle"
        class="md:hidden p-2 text-gray-600 hover:text-gray-900 transition-colors"
        aria-label="Abrir menÃº"
      >
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>
    </div>
  </div>

  <!-- Mobile Navigation -->
  <div id="mobile-menu" class="hidden md:hidden border-t bg-white">
    <div class="container mx-auto px-4 py-4 space-y-4">
      <nav class="flex flex-col space-y-4">
        <a href="/" class="text-gray-600 hover:text-gray-900 transition-colors py-2">Inicio</a>
        <a href="/servicios" class="text-gray-600 hover:text-gray-900 transition-colors py-2">Servicios</a>
        <a href="/acerca-de" class="text-gray-600 hover:text-gray-900 transition-colors py-2">Acerca de</a>
        <a href="/precios" class="text-gray-600 hover:text-gray-900 transition-colors py-2">Precios</a>
        <a href="/testimonios" class="text-gray-600 hover:text-gray-900 transition-colors py-2">Testimonios</a>
        <a href="/contacto" class="text-gray-600 hover:text-gray-900 transition-colors py-2">Contacto</a>
      </nav>

      <div class="flex flex-col space-y-2 pt-4 border-t">
        <Button variant="ghost" size="sm" href="/contacto" class="justify-start">
          <Icon name="phone" size={16} />
          <span>Contacto</span>
        </Button>
        <Button variant="primary" size="sm" href="/servicios" class="justify-start">
          <Icon name="arrow-right" size={16} />
          <span>Ver Servicios</span>
        </Button>
      </div>
    </div>
  </div>
</header>

<script>
  // Mobile menu toggle
  const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
  const mobileMenu = document.getElementById('mobile-menu');

  if (mobileMenuToggle && mobileMenu) {
    mobileMenuToggle.addEventListener('click', () => {
      const isHidden = mobileMenu.classList.contains('hidden');
      if (isHidden) {
        mobileMenu.classList.remove('hidden');
        mobileMenuToggle.setAttribute('aria-expanded', 'true');
      } else {
        mobileMenu.classList.add('hidden');
        mobileMenuToggle.setAttribute('aria-expanded', 'false');
      }
    });

    // Close mobile menu when clicking outside
    document.addEventListener('click', (e) => {
      const target = e.target as Node;
      if (mobileMenuToggle && mobileMenu && !mobileMenuToggle.contains(target) && !mobileMenu.contains(target)) {
        mobileMenu.classList.add('hidden');
        mobileMenuToggle.setAttribute('aria-expanded', 'false');
      }
    });
  }

  // Keyboard navigation
  document.addEventListener('keydown', (e) => {
    // ESC key to close mobile menu
    if (e.key === 'Escape' && mobileMenu && !mobileMenu.classList.contains('hidden')) {
      mobileMenu.classList.add('hidden');
      if (mobileMenuToggle) {
        mobileMenuToggle.setAttribute('aria-expanded', 'false');
        mobileMenuToggle.focus();
      }
    }

    // Enter/Space on menu toggle
    if ((e.key === 'Enter' || e.key === ' ') && e.target === mobileMenuToggle && mobileMenuToggle) {
      e.preventDefault();
      mobileMenuToggle.click();
    }
  });
</script>