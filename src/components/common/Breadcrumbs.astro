---
// Breadcrumbs Component - Dynamic breadcrumb navigation
export interface BreadcrumbItem {
  label: string;
  href?: string;
  current?: boolean;
}

export interface Props {
  items: BreadcrumbItem[];
  className?: string;
}

const { items, className = "" } = Astro.props;
---

<nav class={`flex ${className}`} aria-label="Breadcrumb">
  <ol class="flex items-center space-x-2">
    <li>
      <a href="/" class="text-gray-500 hover:text-gray-700 transition-colors">
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path>
        </svg>
        <span class="sr-only">Inicio</span>
      </a>
    </li>

    {items.map((item, index) => (
      <li class="flex items-center">
        <svg class="w-4 h-4 text-gray-400 mx-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>

        {item.current ? (
          <span class="text-gray-900 font-medium" aria-current="page">
            {item.label}
          </span>
        ) : (
          <a
            href={item.href}
            class="text-gray-600 hover:text-gray-900 transition-colors"
          >
            {item.label}
          </a>
        )}
      </li>
    ))}
  </ol>
</nav>